name: 'Custom steps to run after R packages are installed'

runs:
  using: "composite"
  steps:
    - name: Compute ccache key
      run: |
        echo "GHA_CCACHE_KEY=${{ runner.os }}-$($(R CMD config CXX) --version | head -n 1 | sed -r 's/[, ]/-/g')-R-$(Rscript --vanilla -e 'cat(format(getRversion()))')" | tee -a $GITHUB_ENV
      shell: bash

    - name: Install persistent ccache
      uses: hendrikmuhs/ccache-action@v1.2.10
      with:
        key: ${{ env.GHA_CCACHE_KEY }}
        max-size: 200M
        verbose: 1

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        detached: true

    - name: Download DuckDB binary
      run: |
        # FIXME: only for stable version, other code for dynamic version

        tempdir <- "${{ runner.temp }}"
        runner_os <- "${{ runner.os }}"
        if (runner_os == "Linux") {
          file <- "libduckdb-linux-amd64.zip"
        } else if (runner_os == "Windows") {
          file <- "libduckdb-windows-amd64.zip"
        } else if (runner_os == "macOS") {
          file <- "libduckdb-osx-universal.zip"
        }
        zipfile <- file.path(tempdir, "libduckdb.zip")
        bindir <- file.path(tempdir, "libduckdb")

        # FIXME: dynamic detection of version number
        download.file(file.path("https://github.com/duckdb/duckdb/releases/download", "v0.8.1", file), zipfile)

        unzip(zipfile, exdir = bindir)

        writeLines(
          paste0("DUCKDB_BINARY_PATH=", bindir),
          Sys.getenv("GITHUB_ENV")
        )
      shell: Rscript {0}

    - name: Show DUCKDB_BINARY_PATH
      run: |
        echo $DUCKDB_BINARY_PATH
      shell: bash

    - name: Install to avoid R CMD INSTALL --pre-clean run otherwise
      run: |
        mkdir ../lib
        R CMD INSTALL --library=$(dirname $(pwd))/lib -d --no-byte-compile .
      shell: bash
