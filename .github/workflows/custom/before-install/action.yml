name: 'Custom steps to run before R packages are installed'

runs:
  using: "composite"
  steps:
    - name: Define R CMD check error condition
      run: |
        echo '_R_CHECK_PKG_SIZES_=FALSE' | tee -a $GITHUB_ENV
      shell: bash

    - name: Compute cache key
      run: |
        echo "DUCKDB_R_PREBUILT_ARCHIVE_GHA_CACHE_KEY=duckdb-tar-${{ runner.os }}-$($(R CMD config CXX) --version | head -n 1 | sed -r 's/[, ]/-/g')-${{ hashFiles('src/duckdb/**') }}" | tee -a $GITHUB_ENV
        echo "DUCKDB_R_PREBUILT_ARCHIVE=${{ runner.temp }}/duckdb.tar" | tee -a $GITHUB_ENV
      shell: bash

    - name: Cache duckdb archive
      uses: actions/cache@v3
      with:
        path: ${{ env.DUCKDB_R_PREBUILT_ARCHIVE }}
        key: ${{ env.DUCKDB_R_PREBUILT_ARCHIVE_GHA_CACHE_KEY }}

    - name: Download DuckDB binary
      run: |
        # FIXME: only for stable version, other code for dynamic version

        tempdir <- Sys.getenv("RUNNER_TEMP")
        runner_os <- "${{ runner.os }}"
        if (runner_os == "Linux") {
          file <- "libduckdb-linux-amd64.zip"
        } else if (runner_os == "Windows") {
          file <- "libduckdb-windows-amd64.zip"
        } else if (runner_os == "macOS") {
          file <- "libduckdb-osx-universal.zip"
        }
        zipfile <- file.path(tempdir, "libduckdb.zip")
        bindir <- file.path(tempdir, "libduckdb")

        version <- readLines("src/duckdb/src/function/table/version/pragma_version.cpp", 20)

        rx <- '^#define DUCKDB_VERSION "(.*)"$'
        version_line <- grep(rx, version, value = TRUE)
        version_line
        tag <- gsub(rx, "v\\1", version_line)

        # FIXME: dynamic detection of version number
        download.file(file.path("https://github.com/duckdb/duckdb/releases/download", tag, file), zipfile)

        unzip(zipfile, exdir = bindir)

        writeLines(
          paste0("DUCKDB_BINARY_PATH=", bindir),
          Sys.getenv("GITHUB_ENV")
        )
      shell: Rscript {0}

    - name: Show DUCKDB_BINARY_PATH
      run: |
        echo $DUCKDB_BINARY_PATH
      shell: bash
